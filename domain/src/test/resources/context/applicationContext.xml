<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-2.5.xsd
						http://www.springframework.org/schema/jee 
						http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-2.5.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
						
	<!-- bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:dao" />
		<property name="username" value="sa" />
		<property name="password" value="somepass" />
	</bean>
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="schemaUpdate" value="true"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.jdbc.batch_size">0</prop>
				<prop key="hibernate.hbm2ddl.auto">true</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>fi.jonix.huutonet.domain.model.StateChange</value>
				<value>fi.jonix.huutonet.domain.model.Provider</value>
				<value>fi.jonix.huutonet.domain.model.Market</value>
				<value>fi.jonix.huutonet.domain.model.Ad</value>
				<value>fi.jonix.huutonet.domain.model.Product</value>
				<value>fi.jonix.huutonet.domain.model.AdTemplate</value>
				<value>fi.jonix.huutonet.domain.model.Image</value>
				<value>fi.jonix.huutonet.domain.model.Settings</value>
				<value>fi.jonix.huutonet.domain.model.Order</value>
				<value>fi.jonix.huutonet.domain.model.Transaction</value>
				<value>fi.jonix.huutonet.domain.model.Translation</value>
				<value>fi.jonix.huutonet.domain.model.Email</value>
			</list>
		</property>
	</bean>


	<bean id="adDAO" class="fi.jonix.huutonet.domain.model.dao.AdDAOImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="adTemplateDAO" class="fi.jonix.huutonet.domain.model.dao.AdTemplateDAOImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="imageDAO" class="fi.jonix.huutonet.domain.model.dao.ImageDAOImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="marketDAO" class="fi.jonix.huutonet.domain.model.dao.MarketDAOImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="orderDAO" class="fi.jonix.huutonet.domain.model.dao.OrderDAOImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="productDAO" class="fi.jonix.huutonet.domain.model.dao.ProductDAOImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="providerDAO" class="fi.jonix.huutonet.domain.model.dao.ProviderDAOImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="settingsDAO" class="fi.jonix.huutonet.domain.model.dao.SettingsDAOImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="transactionDAO" class="fi.jonix.huutonet.domain.model.dao.TransactionDAOImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	
	<bean id="translationDAO" class="fi.jonix.huutonet.domain.model.dao.TranslationDAOImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="emailDAO" class="fi.jonix.huutonet.domain.model.dao.EmailDAOImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
      <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <aop:config>
      <aop:advisor
        pointcut="execution(* fi.jonix.huutonet.domain.model.dao.*DAOImpl.*(..))"
        advice-ref="txAdvice"/>
    </aop:config>
    
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
      <tx:attributes>
      	<tx:method name="*" propagation="REQUIRED" timeout="10"/>
      </tx:attributes>
    </tx:advice -->
    
</beans>
